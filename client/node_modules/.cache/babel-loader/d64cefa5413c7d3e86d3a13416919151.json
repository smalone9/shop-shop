{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samma\\\\Desktop\\\\projects\\\\shop-shop\\\\client\\\\src\\\\pages\\\\Detail.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY, ADD_TO_CART, UPDATE_PRODUCTS } from \"../utils/actions\";\nimport Cart from \"../components/Cart\";\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport spinner from \"../assets/spinner.gif\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const {\n    id\n  } = useParams();\n  const [currentProduct, setCurrentProduct] = useState({});\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_PRODUCTS);\n  const {\n    products,\n    cart\n  } = state;\n\n  const addToCart = () => {\n    const itemInCart = cart.find(cartItem => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct,\n          purchaseQuantity: 1\n        }\n      });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id\n    });\n  };\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find(product => product._id === id));\n    } // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n      data.products.forEach(product => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    } // get cache from idb\n    else if (!loading) {\n      idbPromise(\"products\", \"get\").then(indexedProducts => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, currentProduct ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"\\u2190 Back to Products\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, currentProduct.name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, currentProduct.description), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Price:\"), \"$\", currentProduct.price, \" console.log(state)\", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addToCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Add to cart\"), /*#__PURE__*/React.createElement(\"button\", {\n    disabled: !cart.find(p => p._id === currentProduct._id),\n    onClick: removeFromCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Remove from Cart\")), /*#__PURE__*/React.createElement(\"img\", {\n    src: `/images/${currentProduct.image}`,\n    alt: currentProduct.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  })) : null, loading ? /*#__PURE__*/React.createElement(\"img\", {\n    src: spinner,\n    alt: \"loading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 18\n    }\n  }) : null, /*#__PURE__*/React.createElement(Cart, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Detail;","map":{"version":3,"sources":["C:/Users/samma/Desktop/projects/shop-shop/client/src/pages/Detail.js"],"names":["React","useEffect","useState","Link","useParams","useQuery","useStoreContext","REMOVE_FROM_CART","UPDATE_CART_QUANTITY","ADD_TO_CART","UPDATE_PRODUCTS","Cart","QUERY_PRODUCTS","spinner","idbPromise","Detail","state","dispatch","id","currentProduct","setCurrentProduct","loading","data","products","cart","addToCart","itemInCart","find","cartItem","_id","type","purchaseQuantity","parseInt","product","removeFromCart","length","forEach","then","indexedProducts","name","description","price","p","image"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from \"../utils/actions\";\nimport Cart from \"../components/Cart\";\n\nimport { QUERY_PRODUCTS } from \"../utils/queries\";\nimport spinner from \"../assets/spinner.gif\";\nimport { idbPromise } from \"../utils/helpers\";\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n    }\n  };\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n  };\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise(\"products\", \"put\", product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise(\"products\", \"get\").then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  return (\n    <>\n      {currentProduct ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price} console.log(state)\n            <button onClick={addToCart}>Add to cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}