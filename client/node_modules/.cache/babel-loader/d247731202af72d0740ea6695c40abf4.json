{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samma\\\\Desktop\\\\projects\\\\shop-shop\\\\client\\\\src\\\\components\\\\Cart\\\\index.js\";\nimport React, { useEffect } from \"react\";\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport \"./style.css\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useLazyQuery } from \"@apollo/client\";\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, {\n    data\n  }] = useLazyQuery(QUERY_CHECKOUT);\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      dispatch({\n        type: ADD_MULTIPLE_TO_CART,\n        products: [...cart]\n      });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n  useEffect(() => {\n    if (data) {\n      stripePromise.then(res => {\n        res.redirectToCheckout({\n          sessionId: data.checkout.session\n        });\n      });\n    }\n  }, [data]);\n\n  function toggleCart() {\n    dispatch({\n      type: TOGGLE_CART\n    });\n  }\n\n  if (!state.cartOpen) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cart-closed\",\n      onClick: toggleCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"\\uD83D\\uDED2\"));\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n    state.cart.forEach(item => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n    getCheckout({\n      variables: {\n        products: productIds\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close\",\n    onClick: toggleCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"[close]\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, \"Shopping Cart\"), state.cart.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, state.cart.map(item => /*#__PURE__*/React.createElement(CartItem, {\n    key: item._id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Total: $\", calculateTotal()), Auth.loggedIn() ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitCheckout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, \"Checkout\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"(log in to check out)\"))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"shocked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"\\uD83D\\uDE31\"), \"You haven't added anything to your cart yet!\"));\n};\n\nexport default Cart;","map":{"version":3,"sources":["C:/Users/samma/Desktop/projects/shop-shop/client/src/components/Cart/index.js"],"names":["React","useEffect","CartItem","Auth","useStoreContext","TOGGLE_CART","ADD_MULTIPLE_TO_CART","idbPromise","QUERY_CHECKOUT","loadStripe","useLazyQuery","stripePromise","Cart","state","dispatch","getCheckout","data","getCart","cart","type","products","length","then","res","redirectToCheckout","sessionId","checkout","session","toggleCart","cartOpen","calculateTotal","sum","forEach","item","price","purchaseQuantity","toFixed","submitCheckout","productIds","i","push","_id","variables","map","loggedIn"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport CartItem from \"../CartItem\";\nimport Auth from \"../../utils/auth\";\nimport \"./style.css\";\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_CHECKOUT } from \"../../utils/queries\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useLazyQuery } from \"@apollo/client\";\n\nconst stripePromise = loadStripe(\"pk_test_TYooMQauvdEDq54NiTphI7jx\");\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise(\"cart\", \"get\");\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          ðŸ›’\n        </span>\n      </div>\n    );\n  }\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            ðŸ˜±\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}